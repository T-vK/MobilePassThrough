#!/usr/bin/env bash

GRUB_CFG_PATH=/etc/default/grub

COMMAND="$1" # Supported commands: add, remove, apply
PARAM="$2"

if sudo cat "$GRUB_CFG_PATH" | grep --quiet "GRUB_CMDLINE_LINUX_DEFAULT="; then
    GRUB_CMDLINE_VAR="GRUB_CMDLINE_LINUX_DEFAULT"
else
    GRUB_CMDLINE_VAR="GRUB_CMDLINE_LINUX"
fi

function addKernelParam() {
    if ! sudo cat "$GRUB_CFG_PATH" | grep "$GRUB_CMDLINE_VAR=" | grep --quiet "$1"; then
        sudo sed -i "s/^$GRUB_CMDLINE_VAR=\"/&$1 /" "$GRUB_CFG_PATH"
        echo "addKernelParam: Added \"$1\" to $GRUB_CMDLINE_VAR in $GRUB_CFG_PATH"
    else
        echo "addKernelParam: No action required. \"$1\" already exists in $GRUB_CMDLINE_VAR of $GRUB_CFG_PATH"
    fi
}
function addKernelParams() {
    for param in $1; do
        addKernelParam "$param"
    done
}
function removeKernelParam() {
    if sudo cat "$GRUB_CFG_PATH" | grep "$GRUB_CMDLINE_VAR=" | grep --quiet "$1"; then
        sudo sed -i "s/$1 //" "$GRUB_CFG_PATH"
        echo "removeKernelParam: Removed \"$1\" from $GRUB_CMDLINE_VAR in $GRUB_CFG_PATH"
    else
        echo "removeKernelParam: No action required. \"$1\" is not set in $GRUB_CMDLINE_VAR of $GRUB_CFG_PATH"
    fi
}
function removeKernelParams() {
    for param in $1; do
        removeKernelParam "$param"
    done
}

function applyKernelParamChanges() {
    if command -v update-grub &> /dev/null; then
        sudo update-grub
    elif [ -f "/etc/grub2-efi.cfg" ]; then
        sudo sh -c 'grub2-mkconfig > /etc/grub2-efi.cfg'
    fi
}

if [ "$COMMAND" = "add" ]; then
    addKernelParams "$PARAM"
elif [ "$COMMAND" = "remove" ]; then
    removeKernelParams "$PARAM"
elif [ "$COMMAND" = "apply" ]; then
    applyKernelParamChanges
fi
