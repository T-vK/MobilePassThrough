#!/usr/bin/env bash
while [[ "$PROJECT_DIR" != */MobilePassThrough ]]; do PROJECT_DIR="$(readlink -f "$(dirname "${PROJECT_DIR:-0}")")"; done
source "$PROJECT_DIR/scripts/utils/common/libs/helpers"
loadConfig

cd "${THIRDPARTY_DIR}"

sudo dnf install -y binutils-devel cmake texlive-gnu-freefont fontconfig-devel SDL2-devel SDL2_ttf-devel spice-protocol libX11-devel nettle-devel wayland-protocols-devel gcc libXScrnSaver-devel libXfixes-devel libXi-devel wayland-devel mingw64-gcc-c++ mingw32-nsis

LOOKING_GLASS_VERSION="B4"

# Build the (Linux) client application
git clone --single-branch --branch "${LOOKING_GLASS_VERSION}" --depth 1 --recursive https://github.com/gnif/LookingGlass.git
mkdir  LookingGlass/client/build
cd LookingGlass/client/build
cmake ../
make

sudo bash -c "echo '#Type Path Mode UID GID Age Argument' > /etc/tmpfiles.d/10-looking-glass.conf"
sudo bash -c "echo 'f /dev/shm/looking-glass 0660 $(logname) kvm - ' >> /etc/tmpfiles.d/10-looking-glass.conf"

# Build the (Windows) host application
cd "${THIRDPARTY_DIR}"
wget https://developer.nvidia.com/capture_sdk/downloads/v8.0.4/linux -O ./nvidia_capture_api.tgz
rm -rf ./Capture_Linux_v8.0.4
tar -xvzf ./nvidia_capture_api.tgz 
rm ./nvidia_capture_api.tgz
rm -rf ./LookingGlass/Capture_Linux_v8.0.4
mv ./Capture_Linux_v8.0.4 ./LookingGlass/
cd LookingGlass
cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_TOOLCHAIN_FILE=./host/toolchain-mingw64.cmake -DNVFBC_SDK='./Capture_Linux_v8.0.4' -DUSE_NVFBC=1 ./host
make

#wget "https://ci.appveyor.com/api/projects/rainers/visuald/artifacts/cv2pdb.exe?job=Environment%3A%20os%3DVisual%20Studio%202015%2C%20VS%3D14%2C%20APPVEYOR_BUILD_WORKER_IMAGE%3DVisual%20Studio%202015" -O "cv2pdb.exe"
#wine './cv2pdb.exe' './looking-glass-host.exe'
makensis './platform/Windows/installer.nsi'

#```
#binutils-devel  
# - /usr/include/bfd.h
# - /usr/lib64/libbfd.a
# - /usr/lib64/libiberty.a
#
#cmake
# - cmake
#
#texlive-gnu-freefont
# - ???
#
#fontconfig-devel
# - /usr/include/fontconfig/fontconfig.h
#
#SDL2-devel
# - ???
#
#SDL2_ttf-devel
# - ???
#
#spice-protocol
# - /usr/include/spice-1/spice/protocol.h
# - /usr/include/spice-1/spice/vd_agent.h
#
#libX11-devel
# - /usr/include/X11/Xlib.h
# - /usr/include/X11/Xutil.h
#
#nettle-devel
# - /usr/include/nettle/asn1.h
# - /usr/include/nettle/sha1.h
# - /usr/include/nettle/rsa.h
# - /usr/include/nettle/bignum.h
# - 
#
#wayland-protocols-devel
# - /usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml
# - /usr/share/wayland-protocols/unstable/idle-inhibit/idle-inhibit-unstable-v1.xml
# - /usr/share/wayland-protocols/unstable/keyboard-shortcuts-inhibit/keyboard-shortcuts-inhibit-unstable-v1.xml
# - /usr/share/wayland-protocols/unstable/xdg-decoration/xdg-decoration-unstable-v1.xml
# 
#gcc
# - gcc
# - /usr/lib/gcc/x86_64-redhat-linux/11/include/stdatomic.h
# - /usr/lib/gcc/x86_64-redhat-linux/11/include/emmintrin.h
# - /usr/lib/gcc/x86_64-redhat-linux/11/include/smmintrin.h
# - /usr/lib/gcc/x86_64-redhat-linux/11/include/stdarg.h
# - /usr/lib/gcc/x86_64-redhat-linux/11/include/stdbool.h
# - /usr/lib/gcc/x86_64-redhat-linux/11/include/stddef.h
# - /usr/lib/gcc/x86_64-redhat-linux/11/include/stdint.h
# - 
#
#libXScrnSaver-devel
# - /usr/include/X11/extensions/scrnsaver.h
#
#libXfixes-devel
# - /usr/include/X11/extensions/Xfixes.h
#
#libXi-devel
# - /usr/include/X11/extensions/XInput2.h
#
#wayland-devel
# - wayland-scanner
# - /usr/include/wayland-client.h
# - /usr/include/wayland-cursor.h
# - /usr/include/wayland-egl.h
#
#libXinerama-devel
# - /usr/include/X11/extensions/Xinerama.h
#```